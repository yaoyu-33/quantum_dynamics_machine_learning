#!/bin/bash

#SBATCH --nodes=16
#SBATCH --tasks-per-node=1
#SBATCH --cpus-per-task=2
#SBATCH --mem=16GB
#SBATCH --time=0:50:00
#SBATCH --account=shaas_31

module purge
module load gcc/8.3.0
module load cuda/10.1.243
module load python/3.7.6

# CHECK FORMAT OF THE GPU VARIABLE
if [[ -z "$SLURM_GPUS_PER_TASK" ]]; then
    SLURM_GPUS_PER_TASK=0
fi

# CONNECT TO YOUR VIRTUAL ENVIRONMENT
source /home1/mjabram/env376/bin/activate

# GET NODE NAMES
nodes=$(scontrol show hostnames "$SLURM_JOB_NODELIST")
nodes_array=($nodes)

# GET NAME OF THE HEAD NODE
head_node=${nodes_array[0]}
head_node_ip=$(srun --nodes=1 --ntasks=1 -w "$head_node" hostname --ip-address)

# CONVERT ADDRESS TO THE IPV4 FORMAT IF NEEDED
if [[ "$head_node_ip" == *" "* ]]; then
IFS=' ' read -ra ADDR <<<"$head_node_ip"
if [[ ${#ADDR[0]} -gt 16 ]]; then
  head_node_ip=${ADDR[1]}
else
  head_node_ip=${ADDR[0]}
fi
echo "IPV6 address detected. We split the IPV4 address as $head_node_ip"
fi

# RUN THE HEAD NODE
port=6384
ip_head=$head_node_ip:$port
export ip_head
export head_node_ip
export SLURM_CPUS_PER_TASK
export SLURM_GPUS_PER_TASK
echo "IP Head: $ip_head"

echo "Starting HEAD at $head_node"
srun --nodes=1 --ntasks=1 -w "$head_node" \
    ray start --head --node-ip-address="$head_node_ip" --port=$port \
    --num-cpus "${SLURM_CPUS_PER_TASK}" --num-gpus "${SLURM_GPUS_PER_TASK}" --block &

# SLEEP
sleep 10

# DEBUG
ALL_CPUS=$((SLURM_CPUS_PER_TASK*SLURM_NNODES))
echo "**** DEBUG ****"
echo " --> SLURM_CPUS_PER_TASK=$SLURM_CPUS_PER_TASK"
echo " --> SLURM_GPUS_PER_TASK=$SLURM_GPUS_PER_TASK"
echo " --> SLURM_JOB_NODELIST=$SLURM_JOB_NODELIST"
echo " --> head_node==$head_node"
echo " --> head_node_ip==$head_node_ip"
echo " --> ALL_CPUS==$ALL_CPUS"

# CONNECT TO THE HEAD
worker_num=$((SLURM_JOB_NUM_NODES - 1))

for ((i = 1; i <= worker_num; i++)); do
    node_i=${nodes_array[$i]}
    echo "Starting WORKER $i at $node_i"
    srun --nodes=1 --ntasks=1 -w "$node_i" \
        ray start --address "$ip_head" \
        --num-cpus "${SLURM_CPUS_PER_TASK}" --num-gpus "${SLURM_GPUS_PER_TASK}" --block &
    sleep 5
done

# RUN
time PYTHONPATH=/home1/mjabram/quantum_dynamics_machine_learning/benchmarks/emulator/ \
python /home1/mjabram/quantum_dynamics_machine_learning/benchmarks/emulator/scalability_benchmark_multi_nodes.py \
--datasets_path=~/micro_datasets/datasets/
